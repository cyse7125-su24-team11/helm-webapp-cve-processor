pipeline {
    agent any
    triggers {
        githubPush()
    }
    environment {
        CHART_PATH = './postgresql'
    }
    stages {

        stage('Checkout') {
            steps {
                git branch: 'main',
                    changelog: false,
                    credentialsId: 'GH_CRED',
                    poll: false,
                    url: 'https://github.com/cyse7125-su24-team11/helm-webapp-cve-processor.git'
            }
        }

        stage('Helm Lint and Template') {
            steps {
                script {
                    sh 'helm lint postgresql/'
                    sh 'helm template postgresql/'
                }
            }
        }
    
    }
    stage('Semantic Release and Update Chart Version') {
        steps {
            script {
                // Semantic release
                sh 'npx semantic-release'

                // Get the new version
                def newVersion = sh(script: 'npx semantic-release --dry-run | grep "next version" | grep -oP "[0-9]+\\.[0-9]+\\.[0-9]+"', returnStdout: true).trim()

                // Update Chart.yaml with new version
                sh "sed -i 's/^version:.*/version: ${newVersion}/' ${CHART_PATH}/Chart.yaml"
            }
        }
    }

    stage('Create Release') {
        steps {
            script {
                // Get the chart name and version
                def chartInfo = readYaml file: "${CHART_PATH}/Chart.yaml"
                def chartName = chartInfo.name
                def chartVersion = chartInfo.version

                // Create a zip file with the chart name and version
                sh "cd ${CHART_PATH} && zip -r ${chartName}-${chartVersion}.zip ."

                // Create a GitHub release
                def releaseResponse = sh(
                    script: """
                        curl -s -H "Authorization: token ${GITHUB_CREDENTIALS}" \
                                -H "Content-Type: application/json" \
                                -X POST \
                                -d '{
                                    "tag_name": "${chartVersion}",
                                    "target_commitish": "main",
                                    "name": "${chartVersion}",
                                    "body": "Release of version ${chartVersion}",
                                    "draft": false,
                                    "prerelease": false
                                    }' \
                                https://api.github.com/repos/cyse7125-su24-team11/helm-webapp-cve-processor/releases
                    """,
                    returnStdout: true
                ).trim()

                // Extract the release id
                def releaseId = new groovy.json.JsonSlurper().parseText(releaseResponse).id

                // Upload the zip file to the GitHub release
                sh """
                    curl -s -H "Authorization: token ${GITHUB_CREDENTIALS}" \
                            -H "Content-Type: application/zip" \
                            --data-binary @${CHART_PATH}/${chartName}-${chartVersion}.zip \
                            https://uploads.github.com/repos/cyse7125-su24-team11/helm-webapp-cve-processor/releases/${releaseId}/assets?name=${chartName}-${chartVersion}.zip
                """
            }
        }
    }    
}